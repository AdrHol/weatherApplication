(()=>{"use strict";var t={471:(t,e,n)=>{n.d(e,{Z:()=>r});var a=n(28);const s={fetchWeather:function([t,e]){fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${t}&lon=${e}&appid=aeb5a5b9131ac1f1213c966761c4167e&units=metric`,{mode:"cors"}).then((function(t){return t.json()})).then((function(t){i.current=t})).then((function(){a.Z.data()})).catch((function(t){console.log(t)}))},fetchByCity(t){fetch(`https://api.openweathermap.org/data/2.5/weather?q=${t}&appid=aeb5a5b9131ac1f1213c966761c4167e&units=metric`,{mode:"cors"}).then((function(t){if(404===t.status)throw alert("City not found");return t.json()})).then((function(t){i.current=t})).then((function(){a.Z.data()})).catch((function(t){console.log(t)}))}},i={current:void 0,currentUnit:0,getData(){const t=`${Math.round(this.current.main.temp)} ℃`,e=`${Math.round(this.current.main.feels_like)} ℃`,n=this.current.weather[0].description,a=`${this.current.wind.speed} km/h`,s=new Date(1e3*this.current.sys.sunrise),i=new Date(1e3*this.current.sys.sunset);function r(t){let e="";return t.getHours()<10?(e+="0",e+=t.getHours(),t.getMinutes()<10?(e+=":0",e+=t.getMinutes()):t.getMinutes()>=10&&(e+=":",e+=t.getMinutes())):t.getHours()>10&&(e+=t.getHours(),t.getMinutes()<10?(e+=":0",e+=t.getMinutes()):t.getMinutes()>=10&&(e+=":",e+=t.getMinutes())),e}return{temp:t,feel:e,desc:n,wind:a,sunrise:r(s),sunset:r(i)}},unitChange(){const t=document.querySelector("#temp-value"),e=document.querySelector("#feels-value"),n=document.querySelector("button#unit-change");let a=this.current.main.temp,s=this.current.main.feels_like;0===this.currentUnit?(t.textContent=Math.round(9*a/5+35)+"℉",e.textContent=Math.round(9*s/5+35)+"℉",n.textContent="C",this.currentUnit=1):1===this.currentUnit&&(t.textContent=Math.round(a)+"℃",e.textContent=Math.round(s)+"℃",n.textContent="F",this.currentUnit=0)}},r={serverData:s,currentData:i}},28:(t,e,n)=>{n.d(e,{Z:()=>s});var a=n(471);const s={landingPage(){document.querySelector("body").innerHTML='\n        <div class="navbar"><div class="logo">Weather App</div></div>\n        <div class="container">\n        <div class="main">\n        <img>\n        <div class="location">\n            <p class="location-name"></p>\n        </div>\n        <div class="input">\n            <input type="text" class="text-input" name="location" id="location" placeholder="Specify your location" required>\n            <button class="button" id="submit-button">Set</button>\n        </div>\n        <div class="data"></div>\n        </div>\n        </div>\n        ';const t=document.querySelector("#submit-button");t.addEventListener("click",(function(t){const e=document.querySelector("input").value;a.Z.serverData.fetchByCity(e)})),document.querySelector("input").addEventListener("keypress",(function(e){"Enter"===e.key&&t.click()}))},data(){document.querySelector(".location-name").textContent=`${a.Z.currentData.current.name}`,document.querySelector(".container").classList=`container ${a.Z.currentData.current.weather[0].main}`,document.querySelector("img").src=`http://openweathermap.org/img/wn/${a.Z.currentData.current.weather[0].icon}@2x.png`;const t=document.querySelector(".data"),e=a.Z.currentData.getData();t.innerHTML=`<ul class="data-params">\n            <li class="param">\n                <span class="description" id="temp-desc">Temperature:</span><span class="value" id="temp-value">${e.temp}</span><span>\n                <button id="unit-change">F</button>\n            </li>\n            <li class="param">\n                <span class="description" id="feels-desc">It feels like:</span><span class="value" id="feels-value">${e.feel}</span>\n            </li>\n            <li class="param">\n                <span class="description" id="condition-desc">Condition:</span><span class="value" id="condition-value">${e.desc}</span>\n            </li>\n            <li class="param">\n                <span class="description" id="wind-desc">Wind speed:</span><span class="value" id="wind-value">${e.wind}</span>\n            </li>\n            <li class="param">\n                <span class="description" id="sunrise-desc">Sunrise:</span><span class="value" id="sunrise-value">${e.sunrise}</span>\n            </li>\n            <li class="param">\n                <span class="description" id="sunset-desc">Sunset:</span><span class="value" id="sunset-value">${e.sunset}</span>\n            </li>\n            </ul>`,document.querySelector("button#unit-change").addEventListener("click",(function(t){a.Z.currentData.unitChange()}))}}}},e={};function n(a){var s=e[a];if(void 0!==s)return s.exports;var i=e[a]={exports:{}};return t[a](i,i.exports,n),i.exports}n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n(471)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,